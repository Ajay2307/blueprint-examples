version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:

  py27:
    docker:
      - image: circleci/python:2.7

  cloudify-machine:
    machine:
      image: ubuntu-1604:201903-01


commands:

  validate_examples:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.5/ga-release/cloudify-docker-manager-5.0.5.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: pytest -s .cicd/test_examples.py -k 'test_blueprint_validation or test_versions'

  test_openshift:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.5/ga-release/cloudify-docker-manager-5.0.5.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: pytest -s .cicd/test_examples.py -k 'test_openshift'

  test_examples:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.5/ga-release/cloudify-docker-manager-5.0.5.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: pytest -s .cicd/test_examples.py -k 'test_getting_started'

  release_examples:
    steps:
      - run:
          name: "Pull Submodules"
          command: |
            git submodule update --init --recursive
      - attach_workspace:
          at: workspace
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip --user
      - run: python .cicd/package_examples.py

jobs:

  blueprint-validation:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - validate_examples

  getting-started-aws:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - test_examples

  getting-started-aws-terraform:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - test_examples

  getting-started-aws-cloudformation:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - test_examples

  getting-started-openstack:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: openstack
    steps:
      - checkout
      - test_examples

  getting-started-azure:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: azure
    steps:
      - checkout
      - test_examples

  getting-started-azure-arm:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: azure
    steps:
      - checkout
      - test_examples

  getting-started-gcp:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: gcp
    steps:
      - checkout
      - test_examples

  openshift:
    executor: cloudify-machine
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - test_openshift

  release:
    executor: py27
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - release_examples

workflows:
  version: 2
  tests:
    jobs:
      - getting-started-aws:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-aws-terraform:
          requires:
          - getting-started-aws
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-aws-cloudformation:
          requires:
          - blueprint-validation
          - getting-started-aws-terraform
          filters:
            branches:
              only: master
      - getting-started-azure:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-azure-arm:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-gcp:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - openshift:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-openstack:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - blueprint-validation
      - release:
          requires:
            - getting-started-aws
            - getting-started-aws-cloudformation
            - getting-started-aws-terraform
            - getting-started-azure
            - getting-started-azure-arm
            - getting-started-gcp
            - openshift
            - getting-started-openstack
          filters:
            branches:
              only: master
  nightly:
    triggers:
    - schedule:
        cron: "0 0 * * *"
        filters:
          branches:
            only:
              - master
    jobs:
      - blueprint-validation
      - openshift
      - getting-started-aws:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-azure:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-gcp:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-azure-arm:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-aws-cloudformation:
          requires:
          - blueprint-validation
          - getting-started-aws
          filters:
            branches:
              only: master
      - getting-started-aws-terraform:
          requires:
          - blueprint-validation
          - getting-started-aws-cloudformation
          filters:
            branches:
              only: master
      - openshift:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-openstack:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
