version: 2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

jobs:

  blueprint-validation:
    machine:
      enabled: true
      python:
        version: pypy-2.2.1
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-docker-manager-5.0.0.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/CY-2570-Plugins-Build.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_blueprint_validation or test_versions'


  getting-started-aws:
    machine:
      enabled: true
      python:
        version: pypy-2.2.1
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: aws
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-docker-manager-5.0.0.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/CY-2570-Plugins-Build.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_getting_started'


  getting-started-openstack:
    machine:
      enabled: true
      python:
        version: pypy-2.2.1
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: openstack
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-docker-manager-5.0.0.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/CY-2570-Plugins-Build.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_getting_started'

  getting-started-azure:
    machine:
      enabled: true
      python:
        version: pypy-2.2.1
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: azure
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-docker-manager-5.0.0.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/CY-2570-Plugins-Build.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_getting_started'


  getting-started-gcp:
    machine:
      enabled: true
      python:
        version: pypy-2.2.1
    environment:
      CLOUDIFY_SSL_TRUST_ALL: true
      IAAS: gcp
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: update pip
          command: pip install -U pip
      - run:
          name: install cloudify
          command: pip install -U cloudify==5.0.0 pytest==4.6.3 pyyaml==3.10
      - run:
          name: download manager docker image
          command: wget http://repository.cloudifysource.org/cloudify/5.0.0/ga-release/cloudify-docker-manager-5.0.0.tar
      - run:
          name: load docker image
          command: docker load -i cloudify-docker-manager-5.0.0.tar
      - run:
          name: retain space by dumping the tar
          command: rm cloudify-docker-manager-5.0.0.tar
      - run:
          name: show images
          command: docker images
      - run:
          name: install docker
          description: The user needs the docker plugin, which is not included in this package.
          command: cfy plugins upload http://repository.cloudifysource.org/cloudify/wagons/cloudify-docker-plugin/2.0.1/cloudify_docker_plugin-2.0.1-py27-none-linux_x86_64-centos-Core.wgn -y http://www.getcloudify.org/spec/docker-plugin/2.0.1/plugin.yaml || true
      - run:
          name: execute test
          command: pytest -s .cicd/test_examples.py
      - run:   
          name: start docker container
          command: docker run --name cfy_manager -d --restart unless-stopped -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run --tmpfs /run/lock --security-opt seccomp:unconfined --cap-add SYS_ADMIN --network host cloudifyplatform/premium-cloudify-manager-aio
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: pytest -s .cicd/test_examples.py -k 'test_getting_started'

  release:
    docker:
      - image: circleci/python:2.7.15-stretch
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: sudo python get-pip.py
      - run:
          name: Install virtualenv
          command: pip install --user virtualenv
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: install tox
          command: pip install --user pygithub pyyaml==3.10
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: install local project
          command: pip install https://github.com/cloudify-incubator/cloudify-ecosystem-test/archive/latest.zip
      - run: python .cicd/package_examples.py


workflows:
  version: 2
  tests:
    jobs:
      - getting-started-aws:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-azure:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-gcp:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      # - getting-started-openstack  # TODO: Get correct parameters for public OS.
      - blueprint-validation
      - release:
          requires:
            - getting-started-aws
            - getting-started-azure
            - getting-started-gcp
            # - getting-started-openstack  # TODO: Get correct parameters for public OS.
          filters:
            branches:
              only: master
  nightly:
    triggers:
    - schedule:
        cron: "0 0 * * *"
        filters:
          branches:
            only:
              - master
    jobs:
      - blueprint-validation
      - getting-started-aws:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-azure:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-gcp:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
      - getting-started-openstack:
          requires:
          - blueprint-validation
          filters:
            branches:
              only: master
